#define HOST_OS 1
#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include "zmk-helpers/helper.h"

#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>





/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        Tab_switching: Tab_switching {
            compatible = "zmk,behavior-sensor-rotate";
            label = "TAB_SWITCHING";
            #sensor-binding-cells = <0>;
            bindings = <&kp LC(O)>, <&kp P>;
        };

        App_switching: App_switching {
            compatible = "zmk,behavior-sensor-rotate";
            label = "APP_SWITCHING";
            #sensor-binding-cells = <0>;
            bindings = <&kp LG(TAB)>, <&kp LG(LS(TAB))>;
        };

        tap_layer: tap_layer {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_LAYER";
            #binding-cells = <0>;
            bindings = <&mo 2>, <&kp F>;
        };

        next_previous: next_previous {
            compatible = "zmk,behavior-tap-dance";
            label = "NEXT_PREVIOUS";
            #binding-cells = <0>;
            bindings = <&kp LC(C_NEXT)>, <&kp C_PREVIOUS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    combos {
        compatible = "zmk,combos";

        Escape {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp BACKSPACE  &kp Q  &kp W  &kp E     &kp R      &kp T                             &kp UP                &kp Y        &kp U          &kp I           &kp O    &kp P     &kp DELETE
&trans         &trans &trans &trans     &kp F      &kp G                   &kp LEFT  &kp ENTER  &kp RIGHT  &kp H        &kp J          &trans   &trans &trans &kp SQT
&tap_layer     &kp Z  &kp X  &kp C     &kp V      &kp B      &kp SPACE              &kp DOWN              &kp N        &kp M          &kp COMMA       &kp DOT  &kp FSLH  &key_repeat
                             &kp LGUI  &kp SPACE  &lt 1 TAB                                               &lt 2 ENTER  &kp BACKSPACE  &sk LEFT_SHIFT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&kp ESCAPE     &mt LG(LS(N1)) LG(NUMBER_1)  &mt LG(LS(N2)) LG(NUMBER_2)  &mt LG(LS(N3)) LG(NUMBER_3)  &mt LG(LS(N4)) LG(NUMBER_4)  &mt LG(LS(N5)) LG(N5)                                      &mmv MOVE_UP                     &bt BT_CLR    &bt BT_SEL 0      &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &studio_unlock
&kp BACKSPACE  &kp K_CUT                    &kp K_COPY                   &kp K_PASTE                  &kp K_UNDO                   &kp K_REDO                                 &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp K_MUTE    &kp K_PLAY_PAUSE  &trans  &trans        &trans          &trans
&trans         &trans                       &trans                       &trans                       &kp C_AC_HOME                &kp C_AL_LOGOFF        &kp C_PLAY_PAUSE                    &mmv MOVE_DOWN                   &trans        &trans            &trans           &trans       &trans        &trans 
                                                                         &trans                       &trans                       &trans                                                                                      &kp LEFT_GUI  &kp BACKSPACE     &kp SPACE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&kp GRAVE  &kp NUMBER_1  &kp NUMBER_2          &kp NUMBER_3           &kp NUMBER_4  &kp N5                                    &mmv MOVE_UP                     &kp NUMBER_6  &kp N7          &kp N8        &kp N9         &kp N0     &kp BSPC
&kp MINUS  &kp EQUAL     &kp LBKT              &kp RBKT               &kp BSLH      &kp APOS                  &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LC(LEFT)  &kp LEFT_ARROW  &kp UP_ARROW  &kp DOWN       &kp RIGHT  &kp LC(RIGHT)
&trans     &kp DOT       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp FSLH      &sk LEFT_ALT    &trans                    &mmv MOVE_DOWN                   &sl 3         &kp C_AC_HOME   &kp PAGE_UP   &kp PAGE_DOWN  &kp END    &kp ENTER
                                               &sk LCTRL              &sk LEFT_GUI  &sk LEFT_SHIFT                                                             &trans        &trans          &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        Fn_layer {
            bindings = <
&kp ESC  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5                    &trans          &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11
&trans   &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans   &trans
&trans   &trans  &trans  &trans  &trans  &trans  &trans            &trans          &trans  &trans  &trans  &trans  &trans   &trans
                         &trans  &trans  &trans                                    &trans  &trans  &trans
            >;
        };
    };
};
